name: petBook Web Client CI

# 구독할 이벤트
on:
  workflow_dispatch:
  push:
    branches: [fe]
  pull_request:
    branches: [fe]

# jobs 단위로 개별 서버(정확히는 Docker 컨테이너 단위라고 한다.)에서 작업이 수행된다.
# 각 작업은 병렬로 실행 된다고 하는데, needs: build와 같이 표시해서 기다릴 수도 있다.
jobs:
  problem-check:
    # Ubuntu, Windows, MacOS를 지원한다.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - name: yarn install
        uses: borales/actions-yarn@v4
        with:
          cmd: install
          dir: ./petbook_fe
      - name: yarn run lint
        uses: borales/actions-yarn@v4
        with:
          cmd: lint
          dir: ./petbook_fe
      - name: yarn run build
        uses: borales/actions-yarn@v4
        with:
          cmd: build
          dir: ./petbook_fe
  ci-notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs:
      - problem-check
    if: ${{ always() }}
    steps:
      - name: ci-notify
        env:
          TEST_WEBHOOK: ${{ secrets.TEST_WEBHOOK }}
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.TEST_WEBHOOK }}
          username: "petBot"
          avatar-url: "https://cdn.discordapp.com/app-icons/1044621624864940163/87fe18353f90a7a4c275be945afc14e5.png?size=512"
          title: "${{ github.workflow }} : ${{ github.event_name }}"
          description: "빌드 상태 : {{STATUS}}\n로그 : https://github.com/K-Slave/petBook-Client/actions/workflows/petBook-Web-Client-CI.yml\ngithub.action:${{ github.action }}\ngithub.job:${{ github.job }}\ngithub.run_id:${{ github.run_id }}"
          include-details: "false"
          color-success: "#008d62"
          color-failure: "#9b111e"
          color-cancelled: "#ffd400"
  call-cd-workflow:
    needs:
      - problem-check
      - ci-notify
    if: ${{ success() && github.event_name == 'push' }}
    uses: ./.github/workflows/petBook-Web-Client-CD.yml
    with:
      status: "success"
    secrets:
      VERCEL_DEPLOY_TOKEN: ${{ secrets.VERCEL_DEPLOY_TOKEN }}
