name: CI

# Íµ¨ÎèÖÌï† Ïù¥Î≤§Ìä∏
on:
  workflow_dispatch:
  pull_request:

# jobs Îã®ÏúÑÎ°ú Í∞úÎ≥Ñ ÏÑúÎ≤Ñ(Ï†ïÌôïÌûàÎäî Docker Ïª®ÌÖåÏù¥ÎÑà Îã®ÏúÑÎùºÍ≥† ÌïúÎã§.)ÏóêÏÑú ÏûëÏóÖÏù¥ ÏàòÌñâÎêúÎã§.
# Í∞Å ÏûëÏóÖÏùÄ Î≥ëÎ†¨Î°ú Ïã§Ìñâ ÎêúÎã§Í≥† ÌïòÎäîÎç∞, needs: buildÏôÄ Í∞ôÏù¥ ÌëúÏãúÌï¥ÏÑú Í∏∞Îã§Î¶¥ ÏàòÎèÑ ÏûàÎã§.
jobs:
  problem-check:
    # Ubuntu, Windows, MacOSÎ•º ÏßÄÏõêÌïúÎã§.
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 7

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: pnpm build
        run: pnpm build

      - name: pnpm lint
        run: pnpm lint

  vercel-check-web-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 7
          run_install: false
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_DEPLOY_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_DEPLOY_TOKEN }}
  vercel-check-story-book:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 7
          run_install: false
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_DEPLOY_TOKEN }}
      - name: Build Storybook Artifacts
        run: |
          pnpm install
          NEXT_PUBLIC_STORAGE=${{ secrets.NEXT_PUBLIC_STORAGE }} pnpm build-storybook
          cd ./storybook-static
  ci-notify:
    name: Discord Notification
    runs-on: ubuntu-latest
    needs:
      - problem-check
      - vercel-check-web-client
      - vercel-check-story-book
    if: ${{ always() }}
    steps:
      - name: ci-notify
        env:
          TEST_WEBHOOK: ${{ secrets.TEST_WEBHOOK }}
        uses: nobrayner/discord-webhook@v1
        with:
          github-token: ${{ secrets.github_token }}
          discord-webhook: ${{ secrets.TEST_WEBHOOK }}
          username: 'petBot'
          avatar-url: 'https://cdn.discordapp.com/app-icons/1044621624864940163/87fe18353f90a7a4c275be945afc14e5.png?size=512'
          title: '${{ github.workflow }} : ${{ github.event_name }}'
          description: "üö• ÏÉÅÌÉú : {{STATUS}}\nüîç Î°úÍ∑∏ ÌôïÏù∏ : Ï†úÎ™©ÏùÑ ÌÅ¥Î¶≠ÌïòÏÑ∏Ïöî\nüï∞ Í±∏Î¶∞ ÏãúÍ∞Ñ : ??"
          include-details: 'false'
          color-success: '#008d62'
          color-failure: '#9b111e'
          color-cancelled: '#ffd400'
